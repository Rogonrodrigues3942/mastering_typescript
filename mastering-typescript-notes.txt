MASTERING TYPESCRIPT

Início: 28/03/2025

----------------------------------------------------------
*** Seção 2 : Configurando Ambiente ***

setting-up-environment

Aula 4 - 29/03/2025 - Instalando o VS Code

----------------------------------------------------------
29/03/2025 - Aula 5 - Conhecendo extensões úteis do VS Code

1 - Material Icon Theme;
2 - Mithril Emmet;
3 - ESLint
4 - Better Comments
5 - GitLens — Git supercharged
6 - Tabnine: AI Chat & Autocomplete for JavaScript (Não instalada)


----------------------------------------------------------
29/03/2025 - Aula 6 - Instalando o Node.js

Já tenho instalado.
Minha versão: 20.15.1

----------------------------------------------------------

xx/xx/2025 - Aula 7 - Instalando o Git

git version 2.45.2.windows.1 - Já tinha instalado

----------------------------------------------------------

xx/xx/2025 - Aula 8 - Instalando o TypeScript e criando primeiro código

Estava instalado: Version 5.7.3

1 - Instalando o typescript via terminal:

$ npm i -g typescript


2 - Verificando a versão do TS:

$ tsc --version


3 - Instalando a versão do curso:

$ npm install -g typescript@4.1.3
 

4 - Compilando o primeiro arquivo TS, via terminal:

$ tsc primeiro_codigo.ts 
----------------------------------------------------------

30/03/2025 - Aula 9 - Compilando o TypesScript para versões diferentes

Trabalhando com versões antigas do EcmaScript3.


Alteração a versão do ES:

Configurando o EcmaScript via terminal. Via terminal.


Aplicando o init para sobrescrever o tsconfig.json

$ tsc --init

----------------------------------------------------------

30/03/2025 - Aula 10 - entendo o compilador TypeScript 

Rever a aula, importante por que configura o arquivo tsconfig.json.

----------------------------------------------------------


----------------------------------------------------------
*** Seção 3: Conhecendo os Tipos ***

30/03/2025 - Aula 11 - conhecendo os tipos do TypeScript

----------------------------------------------------------
31/03/2025 - Aula 12 - Dedução de Tipo (Type Inference)

----------------------------------------------------------
31/03/2025 - Aula 13 - String

----------------------------------------------------------

01/04/2025 - Aula 14 -Number


----------------------------------------------------------

01/04/2025 - Aula 15 - Union Types

----------------------------------------------------------

01/04/2025 - Aula 16 - Boolean

----------------------------------------------------------

01/04/2025 - Aula 17 - Array

rever aula.

----------------------------------------------------------

02/04/2025 - Aula 18 - Tuple

Tuple: é um array com os tipos de dados definidos e com quantidade determinada.

Uma tupla é uma estrutura de dados imutável. Isso significa que, uma vez criada, seus elementos não podem ser alterados, adicionados ou removidos.


----------------------------------------------------------

02/04/2025 - Aula 19 - Object

Objeto: armazena valores com a característica chave/valor.

----------------------------------------------------------
07/04/2025 - Aula 20 - Enum

ASSISTIDA: 07/04/2025
EXERCÍCIO: 07/04/2025

Em TypeScript, um enum (abreviação de enumeration) é uma forma simples de criar um conjunto de nomes com valores fixos. Ele ajuda você a dar nomes mais claros para valores que normalmente seriam números ou strings.

----------------------------------------------------------

08/04/2025 - Aula 21 - Null and Undefined


ASSISTIDA: 08/04/2025
EXERCÍCIO: 08/04/2025


----------------------------------------------------------

08/04/2025 - Aula 22 - Any

ASSISTIDA: 08/04/2025
EXERCÍCIO: 08/04/2025


Suporta qualquer tipo de dado. 
----------------------------------------------------------

xx/xx/2025 - Aula 23 - Unknown

Tipo desconhecido (unknown).

Usar quando não saberá o retorno de uma massa de dados. Por exemplo a integração com uma API.

ASSISTIDA: 15/04/2025
EXERCÍCIO: 15/04/2025

O tipo unknown não pode ser atribuído diretamente a outro tipo (como number), porque ele é "desconhecido". O TypeScript quer ter certeza que você verificou ou confirmou o tipo antes de usar — diferente do any, que deixa passar mesmo que esteja errado.

----------------------------------------------------------
xx/xx/2025 - Aula 24 - Void

ASSISTIDA: xx/xx/2025
EXERCÍCIO: xx/xx/2025
----------------------------------------------------------

xx/xx/2025 - Aula 25 - Never

ASSISTIDA: xx/xx/2025
EXERCÍCIO: xx/xx/2025
----------------------------------------------------------

xx/xx/2025 - Aula 26 - Afirmações de Tipos

ASSISTIDA: xx/xx/2025
EXERCÍCIO: xx/xx/2025
----------------------------------------------------------






*** Fim da seção 3
----------------------------------------------------------
*** Seção 4: Funções TypeScript ***


*** Fim da seção 4
----------------------------------------------------------
*** Seção 5: Interfaces ***


*** Fim da seção 5
----------------------------------------------------------
*** Seção 6: Orientação a Objetos ***

*** Fim da seção 6
----------------------------------------------------------
*** Seção 7: Módulos ***

----------------------------------------------------------
*** Seção 8: Namespaces ***

----------------------------------------------------------
*** Seção 9: Mixins ***

----------------------------------------------------------
*** Seção 10: Generics ***

----------------------------------------------------------
*** Seção 11: Decorators ***

----------------------------------------------------------
*** Seção 12: Projeto - Calculadora com TypeScript ***

----------------------------------------------------------
